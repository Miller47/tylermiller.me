<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tyler Miller | iOS Developer</title>
    <description>A site to display some of my work and share some thoughts!
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 19 Jan 2024 02:43:33 -0500</pubDate>
    <lastBuildDate>Fri, 19 Jan 2024 02:43:33 -0500</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>Swift KeyPaths</title>
        <description>&lt;p&gt;So what is a KeyPath in Swift? Lets try to answer this in a simply way, note this will not be in depth, but rather a very basic rundown of what a KeyPath is.&lt;/p&gt;

&lt;blockquote class=&quot;blockquote-info&quot;&gt;
  &lt;p&gt;üìò Info
 Please Note: I Am not an expert and this is more or less a way for me to help cement the basics of this concept in my own mind. If this is of any Value to you, thats just an added bonus!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To begin Apple defines a keyPath as follows:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A key path from a specific root type to a specific resulting value type.&lt;/strong&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;Here‚Äôs a bit more detailed definition:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;A reference (‚Äúpath‚Äù) to a property on a give Type. In Swift a ‚ÄòKeyPath‚Äô is expressed as ‚Äò&lt;em&gt;\Type.property&lt;/em&gt;‚Äô, ‚Äò&lt;em&gt;Type&lt;/em&gt;‚Äô is the struct or class. And ‚Äò&lt;em&gt;property&lt;/em&gt;‚Äô would be what you want to reference&lt;/strong&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Superhero&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superpower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Defining key paths for &apos;alias&apos; and &apos;superpower&apos; properties of the Superhero struct.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// These constants allow indirect reference to the properties of any Superhero instance.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;aliasKeyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Superhero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superpowerKeyPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Superhero&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superpower&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;We just created a simple struct and set constants which hold the KeyPath.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// Creating an instance of Superhero.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &apos;superhero&apos; is now an object with &apos;alias&apos; and &apos;superpower&apos; properties.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superhero&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Spider-Bro&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superpower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Web-slinging&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Accessing property values using the key paths defined earlier.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// This demonstrates how key paths can be used to read values from specific properties.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superheroAlias&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aliasKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Retrieves &apos;alias&apos; value: &quot;Spider-Bro&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;superheroPower&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superpowerKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Retrieves &apos;superpower&apos; value: &quot;Web-slinging&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Printing the accessed values.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// It shows how to use the key paths to get property values in a readable and reusable manner.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superheroAlias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superheroPower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Accessing properties using shorthand key path syntax directly.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// This is a more concise way to use key paths, especially when they are not reused elsewhere.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superpower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;We instantiate a Superhero struct here, then we access the values in two manners.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Modifying a property value using its key path.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// This line demonstrates how key paths can also be used to set new values for specific properties.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Spider-Pig&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Changes &apos;alias&apos; property to &apos;Spider-Pig&apos;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Printing the updated alias to demonstrate the change.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;superhero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;keyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Finally, we see how to modify the property values&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These are the very basics of KeyPaths in Swift. I believe this should be enough to at least get you familiar with the concept to the point where SwiftUI will make a tad bit more sense when first getting started.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Jan 2024 00:36:45 -0500</pubDate>
        <link>http://localhost:4000/swift-keypaths</link>
        <guid isPermaLink="true">http://localhost:4000/swift-keypaths</guid>
        
        
        <category>neat,</category>
        
        <category>things</category>
        
        <category>new</category>
        
        <category>to</category>
        
        <category>me,</category>
        
        <category>software,</category>
        
        <category>swift,</category>
        
        <category>keypath</category>
        
      </item>
    
      <item>
        <title>The return</title>
        <description>&lt;p&gt;Seven years have passed since I last engaged with this site and shared content. This platform remains a personal space where I post items that pique my interest or prove useful to me. During my hiatus, I ventured into construction, building and working with concrete. Before that, I had a stint in the oil fields, and even earlier in 2018, I contributed to an open-source project called Trust Wallet, which Binance eventually acquired.&lt;/p&gt;

&lt;p&gt;After my final contribution to this repository, I took a break from the digital world, setting aside Xcode, VS Code, and GitHub. Around the same time, my trusty 2012 MacBook Pro 15‚Äù ceased to receive software updates, marking the end of an era.&lt;/p&gt;

&lt;p&gt;Now, I‚Äôm turning over a new leaf. Armed with a 14‚Äù MacBook Pro equipped with an M3 Pro chip and 36 GB of RAM, I am ready to rekindle my technical skills. My goal is to commit to creating apps, tools, and anything that I find intriguing or practical. It‚Äôs going to be a challenging journey, as I feel somewhat out of touch with the coding world. It‚Äôs almost as if I‚Äôm starting from scratch. Nevertheless, I‚Äôm ready for this long haul and excited about these new beginnings. Wish me luck on this fresh endeavor.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Dec 2023 21:11:45 -0500</pubDate>
        <link>http://localhost:4000/coming-back</link>
        <guid isPermaLink="true">http://localhost:4000/coming-back</guid>
        
        
        <category>work,</category>
        
        <category>life,</category>
        
        <category>software,</category>
        
        <category>swift</category>
        
      </item>
    
      <item>
        <title>Finding Work</title>
        <description>&lt;p&gt;Let us talk about finding work today as a new iOS Developer with little experience. It seems to be a very large challenge to get into the industry without having vast amounts of knowledge and experience, in my experience, it only leads to frustration and let down.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://gif.co/tgFZ.gif&quot; alt=&quot;Why!!&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a year of trying to find a place in the mobile industry and failing, the only option left is to just keep trying. It‚Äôs just a little discouraging to always hear you need more experience. I‚Äôm just at a loss as to how to gain the professional experience needed to get my start.&lt;/p&gt;

&lt;p&gt;This post hasn‚Äôt really provided any useful information on how to overcome this obstacle, rather it was more of a way to express my feelings and share my experience. I hope you enjoyed it anyways!&lt;/p&gt;

</description>
        <pubDate>Thu, 29 Sep 2016 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/finding-work</link>
        <guid isPermaLink="true">http://localhost:4000/finding-work</guid>
        
        
        <category>work,</category>
        
        <category>life,</category>
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>MARoundButton</title>
        <description>&lt;p&gt;&lt;strong&gt;Updated&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;maroundbutton&quot;&gt;MARoundButton&lt;/h3&gt;
&lt;p&gt;MARoundButton is a simple UIButton subclass written in &lt;del&gt;Swift 2.2&lt;/del&gt; Swift 3.0 that allows for easy rounding of UIButtons. MARoundButton supports Interface Builder as well as directly through code. MARoundButton is my first open sourced project, albeit a simple one. If you are interested in using MARoundButton it can be found on &lt;a href=&quot;https://github.com/MillerApps/MARoundButton&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;installation&quot;&gt;Installation&lt;/h4&gt;

&lt;p&gt;MARoundButton is available through &lt;a href=&quot;http://cocoapods.org&quot; target=&quot;_blank&quot;&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following line to your Podfile:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;MARoundButton&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;how-to-use&quot;&gt;How To Use&lt;/h4&gt;

&lt;p&gt;MARoundButton can be used through StoryBoards by adding a UIButton to the View and under the identity inspector select MARoundButton as the class and the module. All the properties can be changed within the attributes inspector tab.&lt;/p&gt;

&lt;p&gt;MARoundButton can also be used through code just like a normal UIButton. Just remember to set the Round button properties.&lt;/p&gt;

&lt;h4 id=&quot;storyboard-example&quot;&gt;StoryBoard Example&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://g.recordit.co/wiUK3mqQ1Z.gif&quot; alt=&quot;StoryBoard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;New content&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;swift-example&quot;&gt;Swift Example&lt;/h4&gt;

&lt;p&gt;First import MARoundButton&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MARoundButton&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Next setup a button similar to the following:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;btn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MARoundButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brown&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;BTN&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tintColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
        
&lt;span class=&quot;c1&quot;&gt;// MARoundButton&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;borderColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;borderAlpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
        
&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;btn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;todo&quot;&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Finish documentation&lt;/li&gt;
  &lt;li&gt;Add a demo project&lt;/li&gt;
  &lt;li&gt;Add code demo for Objective-C&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;author&quot;&gt;Author&lt;/h4&gt;

&lt;p&gt;Tyler Miller&lt;/p&gt;

&lt;h4 id=&quot;license&quot;&gt;License&lt;/h4&gt;

&lt;p&gt;MARoundButton is available under the MIT license. See the LICENSE &lt;a href=&quot;https://github.com/MillerApps/MARoundButton/blob/master/LICENSE&quot; target=&quot;_blank&quot;&gt;file&lt;/a&gt; for more info.&lt;/p&gt;

&lt;h4 id=&quot;info&quot;&gt;Info&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://travis-ci.org/MillerApps/MARoundButton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://img.shields.io/travis/MillerApps/MARoundButton.svg?style=flat&quot; alt=&quot;CI Status&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;http://cocoapods.org/pods/MARoundButton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/v/MARoundButton.svg?style=flat&quot; alt=&quot;Version&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;http://cocoapods.org/pods/MARoundButton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/l/MARoundButton.svg?style=flat&quot; alt=&quot;License&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;http://cocoapods.org/pods/MARoundButton&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://img.shields.io/cocoapods/p/MARoundButton.svg?style=flat&quot; alt=&quot;Platform&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 06 Sep 2016 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/maroundbutton</link>
        <guid isPermaLink="true">http://localhost:4000/maroundbutton</guid>
        
        
        <category>open</category>
        
        <category>source,</category>
        
        <category>swift</category>
        
      </item>
    
      <item>
        <title>Shotty Bird</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/app/id1114259560?ls=1&amp;amp;mt=8&quot; target=&quot;_blank&quot;&gt;Shotty Bird&lt;/a&gt; is a free iOS game developed by &lt;a href=&quot;http://jorgetapia.net/&quot; target=&quot;_blank&quot;&gt;Jorge Tapia&lt;/a&gt; which was released earlier today. Shotty Bird provides the user with a simple and familiar feeling game that keeps us entertained in times of boredom while still providing a challenge. During my time playing Shotty Bird I achieved a score of 31, which took a fair amount of time.&lt;span class=&quot;image-holder&quot;&gt;
    &lt;img src=&quot;/assets/MillerApps_2016-Jun-03.jpg&quot; alt=&quot;score&quot; /&gt;
&lt;/span&gt;
 Once I learned the mechanics the game became a little easier while remaining challenging. Throughout the entire game you will be delighted to a great little melody and wonderful visuals. I urge everyone to give Shotty Bird a try.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/shotty-bird</link>
        <guid isPermaLink="true">http://localhost:4000/shotty-bird</guid>
        
        
        <category>app,</category>
        
        <category>game</category>
        
      </item>
    
      <item>
        <title>Jekyll My Thoughts</title>
        <description>&lt;p&gt;To begin I am new to Jekyll and I have not done any web development since 2013 ish. To elaborate a little more, I primarily focus on iOS development and really only dabbled in web (not my favorite thing). I recently found out about Jekyll and decided to give it a shot, after all I kind of needed a website. So I began with the setup and created my first Jekyll project, I found the whole setup process to be very simple in fact even enjoyable. Next came the customization of my new site, armed with my limited knowledge of CSS I began the process of making the site my own. Along the way I found myself wondering about a few things and luckily the answers were always in reach thanks to many blogs talking about Jekyll. After a few days of twaeking, I finally had something I enjoyed and for no cost other than time and domain names.&lt;/p&gt;

&lt;p&gt;I must say Jekyll made the task of creating a website that much easier while maintaining full customizability. Overall I think Jekyll is a great tool for any developer or blogger that wants more control but also doesn‚Äôt want the headache of maintenance.&lt;/p&gt;

&lt;p&gt;Jekyll has got me interested in web again and I hope to dive deeper into both.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/jekyll-my-thoughts</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll-my-thoughts</guid>
        
        
        <category>app,</category>
        
        <category>Jekyll</category>
        
      </item>
    
      <item>
        <title>New Stickers</title>
        <description>&lt;p&gt;I just ordered some custom stickers and would like to offer the opportunity for anyone to purchase one. If you are interested in purchasing one you can do so &lt;a href=&quot;https://www.stickermule.com/marketplace/5743-miller-apps&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/stickers</link>
        <guid isPermaLink="true">http://localhost:4000/stickers</guid>
        
        
      </item>
    
      <item>
        <title>Dodging Asteroids (my first app/game)</title>
        <description>&lt;p&gt;Dodging Asteroids is the very first iOS app that I have released. I worked on it for around two months while learning SpriteKit (Apple‚Äôs 2d Gaming framework), it was a very good experience overall. As with anything there of course were some points of difficulty. Over this period I found SpriteKit to be very easy to work with with a few exceptions due to un-fixed bugs, overall I would say SpriteKit is a great gaming framework for anyone looking to create a 2d game for any iOS device.&lt;/p&gt;

&lt;p&gt;Now for a little about the app, it is a game set in space with a simple goal to dodge the asteroids for as long as possible. Along the way spacemen will spawn on occasion that will provide the player you to gain an extra life (up to 3) and 5 extra points. If you would like to check Dodging Asteroids it is available on the &lt;a href=&quot;https://itunes.apple.com/us/app/dodging-asteriods/id969815744?mt=8&quot; target=&quot;_blank&quot;&gt;App Store&lt;/a&gt; today!&lt;/p&gt;
</description>
        <pubDate>Mon, 11 May 2015 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/dodging-asteroids</link>
        <guid isPermaLink="true">http://localhost:4000/dodging-asteroids</guid>
        
        
        <category>app</category>
        
      </item>
    
  </channel>
</rss>
